
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sun Dec 11 22:45:03 CLST 2022
//----------------------------------------------------

package codigo;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java_cup.runtime.Symbol;

/** CUP v0.10k generated parser.
  * @version Sun Dec 11 22:45:03 CLST 2022
  */
public class a_sintaxis
 extends java_cup.runtime.lr_parser
{
  /** Default constructor. */
  public a_sintaxis() {super();}

  /** Constructor which sets the default scanner. */
  public a_sintaxis(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\011\000\002\002\004\000\002\003\003\000\002\003" +
    "\003\000\002\003\006\000\002\003\006\000\002\003\003" +
    "\000\002\003\003\000\002\003\016\000\002\003\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\037\000\022\004\014\005\007\006\012\007\004\010" +
    "\006\011\013\012\010\013\005\001\002\000\004\014\027" +
    "\001\002\000\004\002\uffff\001\002\000\004\002\ufffb\001" +
    "\002\000\004\014\024\001\002\000\004\002\ufffc\001\002" +
    "\000\004\002\023\001\002\000\004\014\020\001\002\000" +
    "\004\014\015\001\002\000\004\002\000\001\002\000\004" +
    "\017\016\001\002\000\004\014\017\001\002\000\004\002" +
    "\ufff9\001\002\000\004\016\021\001\002\000\004\014\022" +
    "\001\002\000\004\002\ufffd\001\002\000\004\002\001\001" +
    "\002\000\004\016\025\001\002\000\004\014\026\001\002" +
    "\000\004\002\ufffe\001\002\000\004\017\030\001\002\000" +
    "\004\014\031\001\002\000\004\022\032\001\002\000\004" +
    "\014\033\001\002\000\004\017\034\001\002\000\004\014" +
    "\035\001\002\000\004\020\036\001\002\000\004\014\037" +
    "\001\002\000\004\021\040\001\002\000\004\014\041\001" +
    "\002\000\004\002\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\037\000\004\003\010\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$a_sintaxis$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$a_sintaxis$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$a_sintaxis$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$a_sintaxis$actions {


public class Archivo{
	public static String name;
	public static File file;
	public static void crear(String nombre) throws IOException {
		Archivo.file = new File(nombre);
		if(Archivo.file.createNewFile()) {
			Archivo.name = nombre;
		}
	}
	public static void abrir(String nombre) {
		Archivo.file = new File(nombre);
		Archivo.name = nombre;
	}
	public static void cerrar() {
		Archivo.name = null;
		Archivo.file = null;
	}
	public static void escribe(String data) throws IOException {
		FileWriter fileW = new FileWriter(Archivo.file, true);
		BufferedWriter buffW = new BufferedWriter(fileW);
		buffW.write(data);
		buffW.close();
	}
	public static void getData() throws IOException {
		FileReader fileR = new FileReader(Archivo.file);
		BufferedReader buffR = new BufferedReader(fileR);
        String st = buffR.readLine();
        while (st != null) {
        	String[] arrOfStr = st.split(",");
        	String line = String.format("%4s", arrOfStr[0]) +" "+ String.format("%-30s", arrOfStr[1]) + String.format("%-10s", arrOfStr[2]) + String.format("%-30s", arrOfStr[3]) + String.format("%-15s", arrOfStr[4]);
            System.out.println(line);
            st = buffR.readLine();
        }
		buffR.close();
	}
	public static void getData(String id) throws IOException {
		FileReader fileR = new FileReader(Archivo.file);
		BufferedReader buffR = new BufferedReader(fileR);
        String st = buffR.readLine();
        while ((st != null) && !st.split(",")[0].equals(id)){
    		st = buffR.readLine();
        }
        if((st != null) && st.split(",")[0].equals(id)){
        	String[] arrOfStr = st.split(",");
        	String line = String.format("%4s", arrOfStr[0]) +" "+ String.format("%-30s", arrOfStr[1]) + String.format("%-10s", arrOfStr[2]) + String.format("%-30s", arrOfStr[3]) + String.format("%-15s", arrOfStr[4]);
            System.out.println(line);
        }
		buffR.close();
	}
}

  private final a_sintaxis parser;

  /** Constructor */
  CUP$a_sintaxis$actions(a_sintaxis parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$a_sintaxis$do_action(
    int                        CUP$a_sintaxis$act_num,
    java_cup.runtime.lr_parser CUP$a_sintaxis$parser,
    java.util.Stack            CUP$a_sintaxis$stack,
    int                        CUP$a_sintaxis$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$a_sintaxis$result;

      /* select the action based on the action number */
      switch (CUP$a_sintaxis$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // comienza ::= MUESTRA SIMBOLO ENTERO SIMBOLO 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).value;
		 Archivo.getData(id); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-3)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // comienza ::= INGRESA SIMBOLO ENTERO SIMBOLO NOMBRE SIMBOLO ENTERO SIMBOLO OCUPACION SIMBOLO DIRECCION SIMBOLO 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-9)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-9)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-9)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-7)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-7)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-7)).value;
		int ageleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-5)).left;
		int ageright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-5)).right;
		String age = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-5)).value;
		int ocupleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-3)).left;
		int ocupright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-3)).right;
		String ocup = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-3)).value;
		int dirleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).left;
		int dirright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).right;
		String dir = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).value;
		 String info = id + "," + name + "," + age + "," + ocup + "," + dir + "\n"; Archivo.escribe(info); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-11)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // comienza ::= LISTA 
            {
              Object RESULT = null;
		 Archivo.getData(); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // comienza ::= CIERRA 
            {
              Object RESULT = null;
		 Archivo.cerrar(); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // comienza ::= ABRE SIMBOLO ARCHIVO SIMBOLO 
            {
              Object RESULT = null;
		int archleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).left;
		int archright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).right;
		String arch = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).value;
		 Archivo.abrir(arch); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-3)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // comienza ::= CREA SIMBOLO ARCHIVO SIMBOLO 
            {
              Object RESULT = null;
		int archleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).left;
		int archright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).right;
		String arch = (String)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).value;
		 Archivo.crear(arch); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-3)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // comienza ::= TERMINA 
            {
              Object RESULT = null;
		 System.out.println("Terminando programa"); System.exit(0); 
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // comienza ::= INICIA 
            {
              Object RESULT = null;

              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(1/*comienza*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          return CUP$a_sintaxis$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= comienza EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).value;
		RESULT = start_val;
              CUP$a_sintaxis$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-1)).left, ((java_cup.runtime.Symbol)CUP$a_sintaxis$stack.elementAt(CUP$a_sintaxis$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$a_sintaxis$parser.done_parsing();
          return CUP$a_sintaxis$result;

          default:
            {
              throw new Exception(
                 "Invalid action number found in internal parse table");
            }

        }
    }
}

